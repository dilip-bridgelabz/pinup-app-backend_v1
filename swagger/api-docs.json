{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Pinup Backend API's Specification",
    "description": "Pinup is not a Software product, it is a thinking which make your task easy and efficient. And we are plotting our thining in software product. Which will make our work easy. Basically we are planning to make product based on some different technologies.",
    "termsOfService": "http://swagger.io/terms/",
    "contact":{
       "name":"Bridgelabz.com",
       "email":"admin@bridgelabz.com"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Login",
      "description": "API for login"
    },
    {
      "name": "Tag1",
      "description": "API for something"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "Content-Type": [
    "application/x-www-form-urlencoded; charset=UTF-8"
  ],
  "consumes": [
    "application/x-www-form-urlencoded; charset=UTF-8"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "It authenticates the user email from company database and it returns success response with email and token. For every REST call you need to pass token and crossponding email with some extra request body which is based on REST call's.",
        "operationId": "for the URL",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "username": "asdasd",
            "in": "formData",
            "description": "Provide a valid email address to authenticate. e.g. your@some-domain.com",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "password": "1a285sdffd8do8fd",
            "in": "formData",
            "description": "setHeader with every REST call “x-token”:”Your token value”",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Authentcation Successful",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          }
        }
      }
    },
    "/adduser": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Login User",
        "operationId": "Login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "username": "asdasd",
            "in": "formData",
            "description": "Provide a valid user name",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "password": "asdasd",
            "in": "formData",
            "description": "Provide a valid email address to authenticate. e.g. your@some-domain.com",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstname",
            "firstname": "asdasd",
            "in": "formData",
            "description": "Provide first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastname",
            "lastname": "asdasd",
            "in": "formData",
            "description": "Provide last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "gender",
            "gender": "asdasd",
            "in": "formData",
            "description": "Provide gender",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailaddress",
            "emailaddress": "asdasd",
            "in": "formData",
            "description": "Provide a valid email address to authenticate. e.g. your@some-domain.com",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/addUserResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag1"
        ],
        "description": "Returns the status of something",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "auth": {
      "properties": {
        "username": {
          "required": true,
          "type": "string",
          "example": "admin@bridgelabz.com"
        },
        "token": {
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "addUserResponse": {
      "properties": {
        "msg": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "token": {
          "required": true,
          "type": "string",
          "example": "1a285sdffd8do8fd"
        }
      }
    },
    "response1": {
      "200": {
        "description": "Successful response",
        "schema": {
          "$ref": "#/definitions/GroupDetailed"
        }
      },
      "400": {
        "description": "Unrecognized quote or group ID",
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/UnrecognizedQuoteId"
            },
            {
              "$ref": "#/definitions/UnrecognizedGroupId"
            }
          ]
        }
      },
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "23423456543"
        },
        "request": {
          "required": true,
          "type": "schema",
          "example": {
            "eventId": "mathmaticial",
            "numberRequired": 500
          }
        }
      }
    },
    "delete": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "234344234234"
        },
        "status": {
          "required": true,
          "type": "string",
          "example": "deleted"
        }
      }
    },
    "400error": {
      "properties": {
        "message": {
          "type": "string",
          "example": "400 Bad Request"
        }
      }
    }
  }
}
